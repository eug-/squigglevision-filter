package {    import flash.events.Event;	import com.rf.anim.SquigglevisionFilter;	import flash.display.Stage;	/**	 * A wrapper around the SquigglevisionFilter that abstracts the	 * squigglevision animation.	 */	public class Squigglevision extends Object {		private var filter:SquigglevisionFilter = new SquigglevisionFilter();		private var seed:int = 0;		private var stage:Stage;		public function Squigglevision(stage:Stage):void {			this.stage = stage;			stage.addEventListener(Event.ENTER_FRAME, doTheSquiggle);		}				public function get currentFilter():SquigglevisionFilter {			return filter;		}		private function doTheSquiggle(e:Event):void {			filter.animationIndex = seed++;			var targets:Array = getTargets();			for (var i:int = 0; i < targets.length; i++) {				targets[i].filters = [filter];			}		}				private function getTargets() {			var squiggleable:Array = [];			for (var i=0; i < stage.numChildren; i++) {				squiggleable.push(stage.getChildAt(i));			}			return squiggleable;		}	}}